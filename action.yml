name: "Cache Go files efficiently"
description: "Cache Go module and build files more efficiently"
author: "Andrew LeFevre"
inputs:
  mod-key:
    description: "An explicit key for restoring and saving the module cache"
    required: false
  mod-restore-key:
    description: "A prefix of `mod-key` to use to restore a stale cache if no cache hit occurred for `mod-key`"
    required: false
  build-key:
    description: "An explicit key for restoring and saving the build cache"
    required: false
  build-restore-key:
    description: "A prefix of `build-key` to use to restore a stale cache if no cache hit occurred for `build-key`"
    required: false
outputs:
  mod-cache-hit:
    description: "A boolean value to indicate if the module cache was hit"
    value: ${{ steps.check-caches.outputs.mod-cache-hit }}
  build-cache-hit:
    description: "A boolean value to indicate if the build cache was hit"
    value: ${{ steps.check-caches.outputs.build-cache-hit }}
runs:
  using: composite
  steps:
    - name: Get Go cache locations
      id: go-cache-loc
      shell: bash
      run: |
        echo "go-mod-cache=$(go env GOMODCACHE)" >> "${GITHUB_OUTPUT}"
        echo "go-build-cache=$(go env GOCACHE)" >> "${GITHUB_OUTPUT}"

    - name: Set default cache keys if necessary
      id: cache-keys
      shell: bash
      run: |
        MOD_KEY="${{ inputs.mod-key }}"
        MOD_RESTORE_KEY="${{ inputs.mod-restore-key }}"
        BUILD_KEY="${{ inputs.build-key }}"
        BUILD_RESTORE_KEY="${{ inputs.build-restore-key }}"

        GO_VERSION="$(go version | grep -Po '\d\.\d\d\.\d+')"

        if [[ -z $MOD_KEY ]]; then
          MOD_KEY="${{ github.job }}-${{ hashFiles('**/go.sum') }}"
          MOD_RESTORE_KEY="${{ github.job }}-"
        fi
        if [[ -z $BUILD_KEY ]]; then
          BUILD_KEY="${{ github.job }}-${{ runner.os }}-${GO_VERSION}-${{ github.run_id }}-${{ github.run_attempt }}"
          BUILD_RESTORE_KEY="${{ github.job }}-${{ runner.os }}-${GO_VERSION}-"
        fi

        echo "mod-key=${MOD_KEY}" >> "${GITHUB_OUTPUT}"
        echo "mod-restore-key=${MOD_RESTORE_KEY}" >> "${GITHUB_OUTPUT}"
        echo "build-key=${BUILD_KEY}" >> "${GITHUB_OUTPUT}"
        echo "build-restore-key=${BUILD_RESTORE_KEY}" >> "${GITHUB_OUTPUT}"

    - name: Handle Go module cache
      id: go-mod-cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.go-cache-loc.outputs.go-mod-cache }}
        key: ${{ steps.cache-keys.outputs.mod-key }}
        restore-keys: |
          ${{ steps.cache-keys.outputs.mod-restore-key }}

    - name: Handle Go build cache
      id: go-build-cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.go-cache-loc.outputs.go-build-cache }}
        key: ${{ steps.cache-keys.outputs.build-key }}
        restore-keys: |
          ${{ steps.cache-keys.outputs.build-restore-key }}

    - name: Check caches
      id: check-caches
      shell: bash
      run: |
        MOD_CACHE_HIT="false"
        if [[ -d ${{ steps.go-cache-loc.outputs.go-mod-cache }} ]]; then
          MOD_CACHE_HIT="true"
        fi

        BUILD_CACHE_HIT="false"
        if [[ -d ${{ steps.go-cache-loc.outputs.go-build-cache }} ]]; then
          BUILD_CACHE_HIT="true"
        fi

        echo "mod-cache-hit=${MOD_CACHE_HIT}" >> "${GITHUB_OUTPUT}"
        echo "build-cache-hit=${BUILD_CACHE_HIT}" >> "${GITHUB_OUTPUT}"
